<?xml version="1.0"?>
<launch>
    <!-- these are the arguments you can pass this launch file, for example paused:=true -->
     <arg name="paused" default="false"/>
     <arg name="use_sim_time" default="true"/>
     <arg name="gui" default="true"/>
     <arg name="headless" default="false"/>
     <arg name="debug" default="false"/>
     <!-- We resume the logic in empty_world.launch -->
     <include file="$(find gazebo_ros)/launch/empty_world.launch">
       <arg name="debug" value="$(arg debug)" />
       <arg name="gui" value="$(arg gui)" />
       <arg name="paused" value="$(arg paused)"/>
       <arg name="use_sim_time" value="$(arg use_sim_time)"/>
       <arg name="headless" value="$(arg headless)"/>
     </include>

     <!-- Load the URDF into the ROS Parameter Server -->
     <param name="robot_description" command="$(find xacro)/xacro.py '$(find mra7a_gazebo)/urdf/smra7a_gazebo.urdf.xacro'" />

     <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
     <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
       respawn="false" output="screen"
       args="-urdf -model mra7a -param robot_description"/>

  <rosparam 
    file="$(find mra7a_gazebo)/config/position_control.yaml" 
    command="load"/>
  <node 
    name="controller_spawner" 
    pkg="controller_manager" 
    type="spawner" 
    respawn="false"
    output="screen" 
    ns="/mra7a" 
    args="joint_state_controller
          joint1_position_controller
          joint2_position_controller
          joint3_position_controller
          joint4_position_controller
          joint5_position_controller
          joint6_position_controller
          joint7_position_controller
          gripper_controller"/>

<!-- convert joint states to TF transforms for rviz, etc -->
     <node name="robot_state_publisher" pkg="robot_state_publisher"
       type="robot_state_publisher"
       respawn="false" output="screen">
       <remap from="/joint_states" to="/mra7a/joint_states" />
     </node>

</launch>
